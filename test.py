# app.py
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from collections import defaultdict

st.set_page_config(page_title="학교 생활 밸런스 게임", page_icon="👸", layout="centered")
st.title("👑 학교 생활 밸런스 게임")
st.write("엉뚱한 질문에 답하면서 당신의 학교 생활 유형을 알아보세요! 🎀")

# 질문 리스트
questions = [
    ("시험 전날, 당신의 선택은?", ["밤새 벼락치기 → 시험지 보자마자 뇌 정지", "그냥 자고 꿈속에서 시험지 미리 풀어본다"]),
    ("체육시간, 당신의 선택은?", ["달리기 결승선에서 포즈", "체육복만 입고 그늘에서 바람 쐬기"]),
    ("쉬는 시간에 나는...", ["자리에서 조용히 책 보기", "복도에서 갑자기 댄스 파티 시작"]),
    ("과제 제출, 당신의 방식은?", ["마감 3일 전 제출", "선생님이 부를 때까지 잠수"]),
    ("시험 끝난 날, 나는...", ["바로 복습 시작", "게임·넷플릭스 정주행 몰아보기"]),
    ("교실에 에어컨이 고장 났을 때", ["선생님께 민원 넣고 해결 시도", "부채질로 버티며 여름을 승화"]),
    ("급식 대기 줄에서 나는?", ["메뉴 분석 후 최적 동선 공략", "친구들과 수다에 몰입"])
]

# 답변별 점수 매핑
answer_scores = {
    "밤새 벼락치기 → 시험지 보자마자 뇌 정지": {"모범생 3000 ✏️": 2, "지식 폭격기 📚": 1},
    "그냥 자고 꿈속에서 시험지 미리 풀어본다": {"잠꾸러기 고라니 😴": 2, "숨은 게이머 🎮": 1},
    "달리기 결승선에서 포즈": {"체육관 파이터 🥊": 2, "급발진 인싸 🚀": 1},
    "체육복만 입고 그늘에서 바람 쐬기": {"잠꾸러기 고라니 😴": 1, "환경 지키미 🌱": 1},
    "자리에서 조용히 책 보기": {"모범생 3000 ✏️": 1, "지식 폭격기 📚": 2},
    "복도에서 갑자기 댄스 파티 시작": {"복도 아이돌 🎤": 2, "급발진 인싸 🚀": 1},
    "마감 3일 전 제출": {"모범생 3000 ✏️": 2, "지식 폭격기 📚": 1},
    "선생님이 부를 때까지 잠수": {"숨은 게이머 🎮": 1, "급발진 인싸 🚀": 1},
    "바로 복습 시작": {"모범생 3000 ✏️": 2, "지식 폭격기 📚": 1},
    "게임·넷플릭스 정주행 몰아보기": {"숨은 게이머 🎮": 2, "급발진 인싸 🚀": 1},
    "선생님께 민원 넣고 해결 시도": {"환경 지키미 🌱": 2, "모범생 3000 ✏️": 1},
    "부채질로 버티며 여름을 승화": {"잠꾸러기 고라니 😴": 1, "급발진 인싸 🚀": 1},
    "메뉴 분석 후 최적 동선 공략": {"급식 요정 🍱": 2, "모범생 3000 ✏️": 1},
    "친구들과 수다에 몰입": {"급식 요정 🍱": 1, "복도 아이돌 🎤": 1, "급발진 인싸 🚀": 1},
}

# 유형 설명 (200자씩)
descriptions = {
    "모범생 3000 ✏️": "👑 언제나 교과서와 문제집을 끼고 다니며 ... (위 설명 그대로)",
    "급식 요정 🍱": "🍰 오늘의 행복은 급식 메뉴에 달려있다! ...",
    "복도 아이돌 🎤": "🎤 쉬는 시간마다 복도는 당신의 콘서트 무대! ...",
    "숨은 게이머 🎮": "🕹️ 교실에선 평범한 학생 같지만 ...",
    "잠꾸러기 고라니 😴": "💤 수업 시작 종소리가 자장가로 들리고 ...",
    "지식 폭격기 📚": "📚 수업 중에도 손이 번쩍번쩍 ...",
    "체육관 파이터 🥊": "🥊 체육시간만 되면 갑자기 에너지 레벨이 폭발하는 ...",
    "환경 지키미 🌱": "🌱 분리수거 시간에는 누구보다 열정적으로 ...",
    "급발진 인싸 🚀": "🚀 평소에는 조용하다가도 어느 순간 텐션이 폭발 ..."
}

# 점수 초기화
scores = defaultdict(int)

# 질문 표시
st.header("📝 질문")
for i, (q, opts) in enumerate(questions):
    answer = st.radio(f"{i+1}. {q}", opts, index=None, key=f"q{i}")
    if answer:
        for typ, pts in answer_scores[answer].items():
            scores[typ] += pts

# 결과
if st.button("🎉 결과 보기"):
    if not scores:
        st.info("질문에 답변을 선택해주세요!")
    else:
        best_type = max(scores, key=scores.get)
        st.subheader("🏆 당신의 학교 생활 유형은...")
        st.markdown(f"## {best_type}", unsafe_allow_html=True)

        # 점수 데이터프레임
        df = pd.DataFrame(scores.items(), columns=["유형", "점수"]).sort_values(by="점수", ascending=False)

        # 📊 연분홍색 그래프 시각화
        fig, ax = plt.subplots(figsize=(8, 5))
        ax.barh(df["유형"], df["점수"], color="#FFB6C1")  # 연분홍색
        ax.set_xlabel("점수", fontsize=12)
        ax.set_ylabel("학교 생활 유형", fontsize=12)
        ax.set_title("학교 생활 유형 점수 분포", fontsize=14, weight="bold")
        st.pyplot(fig)

        # 설명 출력
        st.subheader("✨ 당신의 성격 설명")
        st.write(descriptions[best_type])
