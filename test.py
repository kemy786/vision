# app.py
import streamlit as st
import pandas as pd
from collections import defaultdict

st.set_page_config(page_title="학교 생활 밸런스 게임", page_icon="👸", layout="centered")
st.title("👑 학교 생활 밸런스 게임")
st.write("엉뚱하고 웃긴 질문들에 답하면서, 당신의 학교 생활 유형을 알아보세요!")

# 질문 리스트 (8번 제외)
questions = [
    ("시험 전날, 당신의 선택은?", ["밤새 벼락치기 → 시험지 보자마자 뇌 정지", "그냥 자고 꿈속에서 시험지 미리 풀어본다"]),
    ("체육시간, 당신의 선택은?", ["달리기 결승선에서 포즈", "체육복만 입고 그늘에서 바람 쐬기"]),
    ("쉬는 시간에 나는...", ["자리에서 조용히 책 보기", "복도에서 갑자기 댄스 파티 시작"]),
    ("과제 제출, 당신의 방식은?", ["마감 3일 전 제출", "선생님이 부를 때까지 잠수"]),
    ("시험 끝난 날, 나는...", ["바로 복습 시작", "게임·넷플릭스 정주행 몰아보기"]),
    ("교실에 에어컨이 고장 났을 때", ["선생님께 민원 넣고 해결 시도", "부채질로 버티며 여름을 승화"]),
    ("급식 대기 줄에서 나는?", ["메뉴 분석 후 최적 동선 공략", "친구들과 수다에 몰입"])
]

# 답변별 점수 배분
answer_scores = {
    "밤새 벼락치기 → 시험지 보자마자 뇌 정지": {"모범생 3000 ✏️": 2, "지식 폭격기 📚": 1},
    "그냥 자고 꿈속에서 시험지 미리 풀어본다": {"잠꾸러기 고라니 😴": 2, "숨은 게이머 🎮": 1},
    "달리기 결승선에서 포즈": {"체육관 파이터 🥊": 2, "급발진 인싸 🚀": 1},
    "체육복만 입고 그늘에서 바람 쐬기": {"잠꾸러기 고라니 😴": 1, "환경 지키미 🌱": 1},
    "자리에서 조용히 책 보기": {"모범생 3000 ✏️": 1, "지식 폭격기 📚": 2},
    "복도에서 갑자기 댄스 파티 시작": {"복도 아이돌 🎤": 2, "급발진 인싸 🚀": 1},
    "마감 3일 전 제출": {"모범생 3000 ✏️": 2, "지식 폭격기 📚": 1},
    "선생님이 부를 때까지 잠수": {"숨은 게이머 🎮": 1, "급발진 인싸 🚀": 1},
    "바로 복습 시작": {"모범생 3000 ✏️": 2, "지식 폭격기 📚": 1},
    "게임·넷플릭스 정주행 몰아보기": {"숨은 게이머 🎮": 2, "급발진 인싸 🚀": 1},
    "선생님께 민원 넣고 해결 시도": {"환경 지키미 🌱": 2, "모범생 3000 ✏️": 1},
    "부채질로 버티며 여름을 승화": {"잠꾸러기 고라니 😴": 1, "급발진 인싸 🚀": 1},
    "메뉴 분석 후 최적 동선 공략": {"급식 요정 🍱": 2, "모범생 3000 ✏️": 1},
    "친구들과 수다에 몰입": {"급식 요정 🍱": 1, "복도 아이돌 🎤": 1, "급발진 인싸 🚀": 1},
}

# 학교 생활 유형별 공주님 느낌 이모지
princess_emojis = {
    "모범생 3000 ✏️": "👑📚✨",
    "급식 요정 🍱": "🍰👸💖",
    "복도 아이돌 🎤": "🎤👑🌸",
    "숨은 게이머 🎮": "🕹️👸🎀",
    "잠꾸러기 고라니 😴": "😴👑💤",
    "지식 폭격기 📚": "📚👸🦄",
    "체육관 파이터 🥊": "🥊👑🌟",
    "환경 지키미 🌱": "🌱👸🌷",
    "급발진 인싸 🚀": "🚀👑🎉"
}

# 점수 초기화
scores = defaultdict(int)

# 질문 표시
st.header("📝 질문")
for i, (q, opts) in enumerate(questions):
    answer = st.radio(f"{i+1}. {q}", opts, index=None, key=f"q{i}")
    if answer:
        for typ, pts in answer_scores[answer].items():
            scores[typ] += pts

# 결과
if st.button("🎉 결과 보기"):
    if not scores:
        st.info("질문에 답변을 선택해주세요!")
    else:
        # 최종 유형
        best_type = max(scores, key=scores.get)
        emoji = princess_emojis.get(best_type, "")
        st.subheader("🏆 당신의 학교 생활 유형은...")
        st.markdown(f"## {emoji} {best_type} {emoji}", unsafe_allow_html=True)

        # 점수 시각화
        st.subheader("📊 유형별 점수 현황")
        df = pd.DataFrame(scores.items(), columns=["유형", "점수"]).sort_values(by="점수", ascending=False)
        st.bar_chart(df.set_index("유형"))

        # 유형 설명
        descriptions = {
            "모범생 3000 ✏️": "📚 교과서와 문제집으로 무장한 공부 머신! 시험 볼 때마다 교실이 당신의 무대 ✨",
            "급식 요정 🍱": "🍱 오늘 점심이 당신의 행복 지수 결정! 돈까스 등장 시 텐션 폭발 💖",
            "복도 아이돌 🎤": "🎤 쉬는 시간 = 당신의 콘서트 타임! 복도는 언제나 무대 🌸",
            "숨은 게이머 🎮": "🎮 교실에선 평범하지만, 종 치자마자 현실 로그아웃 👸",
            "잠꾸러기 고라니 😴": "😴 수업 시작 = 자장가 시작. 하지만 시험 전날만큼은 깨어있는 아이러니 💤",
            "지식 폭격기 📚": "📚 질문 폭격기로 수업 분위기 휘어잡는 지식왕 👑",
            "체육관 파이터 🥊": "🥊 체육시간엔 에너지 전사! 교실에선 잠든 고라니 🌟",
            "환경 지키미 🌱": "🌱 분리수거부터 교내 환경 개선까지 책임지는 학교의 수호자 🌷",
            "급발진 인싸 🚀": "🚀 평소엔 조용하다가 갑자기 폭발! 반 분위기 메이커 🎉"
        }
        st.write(descriptions[best_type])
